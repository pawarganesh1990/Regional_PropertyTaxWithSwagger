package com.regional.property.model;

// Generated 16 Oct, 2016 6:42:40 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * RegUsers generated by hbm2java
 */
@Entity
@Table(name = "reg_users", schema = "public", uniqueConstraints = {
		@UniqueConstraint(columnNames = "passwd"),
		@UniqueConstraint(columnNames = "user_name") })
public class RegUsers implements java.io.Serializable {

	private int userId;
	private String address;
	private String city;
	private String contactNo;
	private String country;
	private Date created=new Date();
	private Date lastUpdate=new Date();
	private int deleted;
	private Date dob;
	private String fullName;
	private String passwd;
	private String userName;
	private String plainPasswd;
	private Set<Property> propertiesForSubOwnerId = new HashSet<Property>(0);
	private Set<Property> propertiesForOwnerId = new HashSet<Property>(0);
	private Set<UserRoles> userRoleses = new HashSet<UserRoles>(0);
	
	@Transient
	private int tempRoleId;

	public RegUsers() {
	}

	public RegUsers(int userId, String address, String city, String contactNo,
			String country, Date created, int deleted, String fullName,
			Date lastUpdate, String passwd, String userName) {
		this.userId = userId;
		this.address = address;
		this.city = city;
		this.contactNo = contactNo;
		this.country = country;
		this.created = created;
		this.deleted = deleted;
		this.fullName = fullName;
		this.lastUpdate = lastUpdate;
		this.passwd = passwd;
		this.userName = userName;
	}

	public RegUsers(int userId, String address, String city, String contactNo,
			String country, Date created, int deleted, Date dob,
			String fullName, Date lastUpdate, String passwd, String userName,
			String plainPasswd, Set propertiesForSubOwnerId,
			Set propertiesForOwnerId, Set userRoleses) {
		this.userId = userId;
		this.address = address;
		this.city = city;
		this.contactNo = contactNo;
		this.country = country;
		this.created = created;
		this.deleted = deleted;
		this.dob = dob;
		this.fullName = fullName;
		this.lastUpdate = lastUpdate;
		this.passwd = passwd;
		this.userName = userName;
		this.plainPasswd = plainPasswd;
		this.propertiesForSubOwnerId = propertiesForSubOwnerId;
		this.propertiesForOwnerId = propertiesForOwnerId;
		this.userRoleses = userRoleses;
	}

	@Id
	@Column(name = "user_id", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "address", nullable = false, length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", nullable = false, length = 50)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "contact_no", nullable = false, length = 20)
	public String getContactNo() {
		return this.contactNo;
	}

	public void setContactNo(String contactNo) {
		this.contactNo = contactNo;
	}

	@Column(name = "country", nullable = false, length = 50)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "deleted", nullable = false)
	public int getDeleted() {
		return this.deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dob", length = 29)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "full_name", nullable = false, length = 50)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = false, length = 29)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "passwd", unique = true, nullable = false, length = 500)
	public String getPasswd() {
		return this.passwd;
	}

	public void setPasswd(String passwd) {
		this.passwd = passwd;
	}

	@Column(name = "user_name", unique = true, nullable = false, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "plain_passwd", length = 50)
	public String getPlainPasswd() {
		return this.plainPasswd;
	}

	public void setPlainPasswd(String plainPasswd) {
		this.plainPasswd = plainPasswd;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "regUsersBySubOwnerId")
	public Set<Property> getPropertiesForSubOwnerId() {
		return this.propertiesForSubOwnerId;
	}

	public void setPropertiesForSubOwnerId(Set<Property> propertiesForSubOwnerId) {
		this.propertiesForSubOwnerId = propertiesForSubOwnerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "regUsersByOwnerId")
	public Set<Property> getPropertiesForOwnerId() {
		return this.propertiesForOwnerId;
	}

	public void setPropertiesForOwnerId(Set<Property> propertiesForOwnerId) {
		this.propertiesForOwnerId = propertiesForOwnerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "regUsers")
	public Set<UserRoles> getUserRoleses() {
		return this.userRoleses;
	}

	public void setUserRoleses(Set<UserRoles> userRoleses) {
		this.userRoleses = userRoleses;
	}
	@Transient
	public int getTempRoleId() {
		return tempRoleId;
	}
	@Transient
	public void setTempRoleId(int tempRoleId) {
		this.tempRoleId = tempRoleId;
	}



}
