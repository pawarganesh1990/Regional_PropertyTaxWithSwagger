package com.regional.property.model;

// Generated 16 Oct, 2016 6:42:40 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Property generated by hbm2java
 */
@Entity
@Table(name = "property", schema = "public")
public class Property implements java.io.Serializable {

	private int propertyId;
	private RegUsers regUsersByOwnerId;
	private Plot plot;
	private Flat flat;
	private Ward ward;
	private Sector sector;
	private RegUsers regUsersBySubOwnerId;
	private int applicationNumber;
	private Date applicationDate;
	private Date created=new Date();
	private Date lastUpdate=new Date();
	private int deleted;
	private String propertyCode;
	private String userName;
	private String plainPasswd;

	public Property() {
	}

	public Property(int propertyId, RegUsers regUsersByOwnerId, Plot plot,
			Flat flat, Ward ward, Sector sector, int applicationNumber,
			Date applicationDate, Date created, int deleted,
			String propertyCode, Date lastUpdate, String userName) {
		this.propertyId = propertyId;
		this.regUsersByOwnerId = regUsersByOwnerId;
		this.plot = plot;
		this.flat = flat;
		this.ward = ward;
		this.sector = sector;
		this.applicationNumber = applicationNumber;
		this.applicationDate = applicationDate;
		this.created = created;
		this.deleted = deleted;
		this.propertyCode = propertyCode;
		this.lastUpdate = lastUpdate;
		this.userName = userName;
	}

	public Property(int propertyId, RegUsers regUsersByOwnerId, Plot plot,
			Flat flat, Ward ward, Sector sector, RegUsers regUsersBySubOwnerId,
			int applicationNumber, Date applicationDate, Date created,
			int deleted, String propertyCode, Date lastUpdate, String userName,
			String plainPasswd) {
		this.propertyId = propertyId;
		this.regUsersByOwnerId = regUsersByOwnerId;
		this.plot = plot;
		this.flat = flat;
		this.ward = ward;
		this.sector = sector;
		this.regUsersBySubOwnerId = regUsersBySubOwnerId;
		this.applicationNumber = applicationNumber;
		this.applicationDate = applicationDate;
		this.created = created;
		this.deleted = deleted;
		this.propertyCode = propertyCode;
		this.lastUpdate = lastUpdate;
		this.userName = userName;
		this.plainPasswd = plainPasswd;
	}

	@Id
	@Column(name = "property_id", unique = true, nullable = false)
	public int getPropertyId() {
		return this.propertyId;
	}

	public void setPropertyId(int propertyId) {
		this.propertyId = propertyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "owner_id", nullable = false)
	public RegUsers getRegUsersByOwnerId() {
		return this.regUsersByOwnerId;
	}

	public void setRegUsersByOwnerId(RegUsers regUsersByOwnerId) {
		this.regUsersByOwnerId = regUsersByOwnerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pr_plot_id", nullable = false)
	public Plot getPlot() {
		return this.plot;
	}

	public void setPlot(Plot plot) {
		this.plot = plot;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pr_flat_id", nullable = false)
	public Flat getFlat() {
		return this.flat;
	}

	public void setFlat(Flat flat) {
		this.flat = flat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pr_ward_id", nullable = false)
	public Ward getWard() {
		return this.ward;
	}

	public void setWard(Ward ward) {
		this.ward = ward;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pr_sector_id", nullable = false)
	public Sector getSector() {
		return this.sector;
	}

	public void setSector(Sector sector) {
		this.sector = sector;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sub_owner_id")
	public RegUsers getRegUsersBySubOwnerId() {
		return this.regUsersBySubOwnerId;
	}

	public void setRegUsersBySubOwnerId(RegUsers regUsersBySubOwnerId) {
		this.regUsersBySubOwnerId = regUsersBySubOwnerId;
	}

	@Column(name = "application_number", nullable = false)
	public int getApplicationNumber() {
		return this.applicationNumber;
	}

	public void setApplicationNumber(int applicationNumber) {
		this.applicationNumber = applicationNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "application_date", nullable = false, length = 29)
	public Date getApplicationDate() {
		return this.applicationDate;
	}

	public void setApplicationDate(Date applicationDate) {
		this.applicationDate = applicationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "deleted", nullable = false)
	public int getDeleted() {
		return this.deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

	@Column(name = "property_code", nullable = false, length = 50)
	public String getPropertyCode() {
		return this.propertyCode;
	}

	public void setPropertyCode(String propertyCode) {
		this.propertyCode = propertyCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = false, length = 29)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "user_name", nullable = false, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "plain_passwd", length = 50)
	public String getPlainPasswd() {
		return this.plainPasswd;
	}

	public void setPlainPasswd(String plainPasswd) {
		this.plainPasswd = plainPasswd;
	}

}
