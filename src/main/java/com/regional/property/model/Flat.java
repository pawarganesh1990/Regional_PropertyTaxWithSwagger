package com.regional.property.model;

// Generated 16 Oct, 2016 5:51:52 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Flat generated by hbm2java
 */
@Entity
@Table(name = "flat", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "flat_name"))
public class Flat implements java.io.Serializable {

	private int flatId;
	private Plot plot;
	private String flatName;
	private int deleted;
	private Date created=new Date();
	private Date lastUpdate=new Date();

	public Flat() {
	}

	public Flat(int flatId, Plot plot, String flatName, int deleted,
			Date created, Date lastUpdate) {
		this.flatId = flatId;
		this.plot = plot;
		this.flatName = flatName;
		this.deleted = deleted;
		this.created = created;
		this.lastUpdate = lastUpdate;
	}

	@Id
	@Column(name = "flat_id", unique = true, nullable = false)
	public int getFlatId() {
		return this.flatId;
	}

	public void setFlatId(int flatId) {
		this.flatId = flatId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "plot_id", nullable = false)
	public Plot getPlot() {
		return this.plot;
	}

	public void setPlot(Plot plot) {
		this.plot = plot;
	}

	@Column(name = "flat_name", unique = true, nullable = false, length = 100)
	public String getFlatName() {
		return this.flatName;
	}

	public void setFlatName(String flatName) {
		this.flatName = flatName;
	}

	@Column(name = "deleted", nullable = false)
	public int getDeleted() {
		return this.deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = false, length = 29)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

}
